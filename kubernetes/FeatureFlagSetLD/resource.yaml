apiVersion: v1
kind: List
metadata:
  name: featureflagsetld-controller-list
  annotations:
    razee.io/git-repo: "{{{GIT_REMOTE}}}"
    razee.io/commit-sha: "{{TRAVIS_COMMIT}}"
    version: "{{TRAVIS_COMMIT}}"
type: array
items:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: featureflagsetld-controller
      annotations:
        razee.io/git-repo: "{{{GIT_REMOTE}}}"
        razee.io/commit-sha: "{{TRAVIS_COMMIT}}"
      labels:
        razee/watch-resource: "lite"
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: featureflagsetld-controller
      strategy:
        type: RollingUpdate
      template:
        metadata:
          labels:
            app: featureflagsetld-controller
            razee/watch-resource: "lite"
          name: featureflagsetld-controller
        spec:
          serviceAccountName: razeedeploy-sa
          containers:
            - image: "quay.io/razee/featureflagsetld:{{TRAVIS_TAG}}"
              resources:
                limits:
                  memory: 200Mi
                  cpu: 100m
                requests:
                  memory: 75Mi
                  cpu: 40m
              env:
                - name: CRD_WATCH_TIMEOUT_SECONDS
                  valueFrom:
                    configMapKeyRef:
                      name: razeedeploy-overrides
                      key: CRD_WATCH_TIMEOUT_SECONDS
                      optional: true
              imagePullPolicy: Always
              name: featureflagsetld-controller
              livenessProbe:
                exec:
                  command:
                    - sh/liveness.sh
                initialDelaySeconds: 30
                periodSeconds: 150
                timeoutSeconds: 30
                failureThreshold: 1

  - apiVersion: v1
    kind: Namespace
    metadata:
      name: razeedeploy
      labels:
        deploy.razee.io/mode: "EnsureExists"
        deploy.razee.io/Reconcile: "false"
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: ffsld-conversionwebhookwerver
      namespace: razeedeploy
      annotations:
        razee.io/git-repo: "{{{GIT_REMOTE}}}"
        razee.io/commit-sha: "{{TRAVIS_COMMIT}}"
      labels:
        razee/watch-resource: "lite"
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: ffsld-conversionwebhookwerver
      strategy:
        type: RollingUpdate
      template:
        metadata:
          labels:
            app: ffsld-conversionwebhookwerver
            razee/watch-resource: "lite"
          name: ffsld-conversionwebhookwerver
        spec:
          containers:
            - name: ffsld-conversionwebhookwerver
              image: "quay.io/razee/featureflagsetld:{{TRAVIS_TAG}}"
              resources:
                limits:
                  memory: 100Mi
                  cpu: 100m
                requests:
                  memory: 75Mi
                  cpu: 40m
              imagePullPolicy: Always
              command: ["npm"]
              args: ["run", "start-cws"]
              livenessProbe:
                httpGet:
                  path: /liveness
                  port: 8080
                initialDelaySeconds: 5
                periodSeconds: 10
                timeoutSeconds: 2
                failureThreshold: 1
  - apiVersion: v1
    kind: Service
    metadata:
      name: ffsld-conversionwebhookwerver-service
      namespace: razeedeploy
    spec:
      selector:
        app: ffsld-conversionwebhookwerver
      ports:
        - name: https
          protocol: TCP
          port: 443
        - name: http
          port: 80
          protocol: TCP
          targetPort: 8080

  - apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      # name must match the spec fields below, and be in the form: <plural>.<group>
      name: featureflagsetsld.deploy.razee.io
      annotations:
        razee.io/git-repo: "{{{GIT_REMOTE}}}"
        razee.io/commit-sha: "{{TRAVIS_COMMIT}}"
    spec:
      # group name to use for REST API: /apis/<group>/<version>
      group: deploy.razee.io
      # list of versions supported by this CustomResourceDefinition
      versions:
        - name: v1alpha1
          # Each version can be enabled/disabled by Served flag.
          served: true
          # One and only one version must be marked as the storage version.
          storage: false
        - name: v1alpha2
          # Each version can be enabled/disabled by Served flag.
          served: true
          # One and only one version must be marked as the storage version.
          storage: true
      conversion:
        # a Webhook strategy instruct API server to call an external webhook for any conversion between custom resources.
        strategy: Webhook
        # webhookClientConfig is required when strategy is `Webhook` and it configures the webhook endpoint to be called by API server.
        webhookClientConfig:
          service:
            namespace: razeedeploy
            name: ffsld-conversionwebhookwerver-service
            path: /crd-conversion
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVsakNDQW40Q0NRRHZaSzJpK09aTGV6QU5CZ2txaGtpRzl3MEJBUXNGQURBTk1Rc3dDUVlEVlFRR0V3SjEKY3pBZUZ3MHhPVEV4TWpFeU1USXhNRFphRncwME56QTBNRGd5TVRJeE1EWmFNQTB4Q3pBSkJnTlZCQVlUQW5WegpNSUlDSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQWc4QU1JSUNDZ0tDQWdFQTBKZmtjSFptZXpzd3AxN29abE5zCnBKWHFqSFdZZWxpS3EwQlZrTEVGaXhLb1pwZzZZVmR1VkxZbTZ3QzdZcmZhM3UzVTN5UGkxak9abWdvMDRwOGIKSVBqMVZSVk4rZUpLMVdPZ0xTdDV2UjBLVnMrU0wrZG1wa3pxTEliQTVVMnVncVdnNStaV2VCR3JUUlR3MDdZUQo0Rk12Yk9Hd0VTeks0UWpTNUR3Z2NoR2tqYWQvbWZ1S3ZLVy9TQWtyU1Bjcm5uSjVkdGhMTmFOUjdkVUR6eXlsCnBsTE9Pb1AwZUlwaHlKaEdDeXNKNlQrSmRaQ2ZSV1VXeGRXZ0pFcWNHb1kyaGdHTXFsTVBWd1F6U1FsQzJMWmcKOVc3cjExZUVJL205T0dYM1pFbk9sTWNuU25sTjZEZm9IT3o0TW5USktJbWg0d0NNdWFFbU1SaDFGWlBtRDl4ZQpyeDZUK3ZiUCtFT04xN0sxUU1IV3pXeVBYQW5tNVVyVk9WeWNLMzBoSlFXdm9COWxhM0NEQ2lnUzllR3pMcGdYClk5YVRjQ2dPR0JyK0U5M2F5UEkxUndqYWNRYUM2U1Mxc3dsMVhFOTRuVmw4TXN0eU9SWkZTTjN5K2Q4UDhUUmUKU2tlZkw2dVVZZU1VYjB1alVDQ05Qc05ORE5lbkZ0eWNFeDZHdnVXV1hmSUdXYXM3dTFvelRmWlN5NWkxMnloVgoxUmRWNEpJcXJjTWt6aHdnZXhmUVBrbzJPVzFHbm9kZVowOUxJdWtCYjRiUmNpQzJhYUNJSEVMdXdGRFVOQzBtCjA4cW92aWpMOXM5aUwwaVNNeU9xT3ptT3c1TnRiLytGUFV2STZuTkV4UnN4MHZML1h0dGdRTFJqcFVkYXhmRWwKTnM0a005YVIwajd1T2hla0MwT2JqVDhDQXdFQUFUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FnRUFrZEJHMEk3KwoxTlhkOWpXWkJ2WVdWN1ZMbmVoM1o1YzFZV1F2R081MVh5TVdQeVhrNnBIQXpINEw2ekd3K3o3NXFXWXdjOFlFCnRFTWl4ZWpabUdFdzRENmM4ZHlSbXVrSStUR0w2NWErQ0ZUdlVIMy9wcGs3MGZhZDF4WFdKcEMrNld4bW5qL3oKVUFIUlh1d0ZmcFZaVW5ranlONy9GK2F1bHFXbi9hbXBUQzVPMGZWWFRhdmI3dklBQVdIL1JjdUFZSnJsbEw4cwphTk5QQnVyU2N4bEUzN2ZudmRGR1dvdHp5eGROQTlMbkVxMGFKTTRsSzhkbzQyOEkyWlRRS0crWEdYR1p3QzZUClFUdUNTeEdOV0VXMlJjWHJiRDVNTi9pWnBlcmZxQlpIbmphdmxkSEpKN2RCeE5WbitDS3IvV0k0Vkw0eTR5YU4KUG9keUdPSENaNXgvMmNwT01NMy9GdzlUQ3I1U0tjSmRsakJnRTVsRjVnOTd1bFJFZ2pINm1pRWhSMkhpMjNMRwp1ZDBVNHNsVy9OOEgxYldlYUtYWEhQZVZjaEFGYmVmZyt6VSt6YmFpditkQ1hIQ1Nvd25nemFvR2ZScHozWVZuCnNkT0U2bmFRcUhVK2RHbVlyb2o5T3RzZnRPT2pjYjY2UFdZTER5L2U3OW5hb1M0RWUzWVhyL3lDU0o2ZlBBOEYKM1RjSlIvbWlZS1pveU1NalFERFVPRmIrTGd2T1Vva1dFZGRldjRudE9zL1duK204L3FveURLMXRMWWlmV0tCYwp1c2x0S1o3a0UySmpMU0R6azF3aDNQcVYvby9admRuS3c3K0J4RkQ1K1d6K0NxV254NzdsYnY2V1hnNlB4V0VXClRJQ25KTWhVVnlvanBHY3ZoREcxM2l0cllKbUlOSDRiWnFFPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        conversionReviewVersions: ["v1", "v1beta1"]
      # either Namespaced or Cluster
      scope: Namespaced
      names:
        # plural name to be used in the URL: /apis/<group>/<version>/<plural>
        plural: featureflagsetsld
        # singular name to be used as an alias on the CLI and for display
        singular: featureflagsetld
        # kind is normally the CamelCased singular type. Your resource manifests use this.
        kind: FeatureFlagSetLD
        # shortNames allow shorter string to match your resource on the CLI
        shortNames:
          - ffsld
      subresources:
        # status enables the status subresource.
        status: {}
      # prune unknown fields
      preserveUnknownFields: false
      validation:
        # openAPIV3Schema is the schema for validating custom objects.
        openAPIV3Schema:
          type: object
          required: [spec]
          properties:
            spec:
              type: object
              allOf:
                - # you must define oneOf:
                  oneOf:
                    - required: [sdkKey]
                    - required: [sdkKeyRef]
                - # you must define oneOf:
                  oneOf:
                    - # neither 'identityRef' nor 'identityKey' is used
                      not:
                        anyOf:
                          - required: [identityRef]
                          - required: [identityKey]
                    - # 'identityRef' is used by itself
                      required: [identityRef]
                      not:
                        required: [identityKey]
                    - # 'identityRef' and 'identityKey' are used together
                      required: [identityRef, identityKey]
              properties:
                sdkKey:
                  type: string
                sdkKeyRef:
                  type: object
                  required: [valueFrom]
                  properties:
                    valueFrom:
                      type: object
                      required: [secretKeyRef]
                      properties:
                        secretKeyRef:
                          type: object
                          required: [name, key]
                          properties:
                            name:
                              type: string
                            key:
                              type: string
                            namespace:
                              type: string
                identityKey:
                  type: string
                identityRef:
                  type: object
                  anyOf:
                    - required: [envFrom]
                    - required: [env]
                  properties:
                    envFrom:
                      type: array
                      items:
                        type: object
                        oneOf:
                          - required: [configMapRef]
                          - required: [secretMapRef]
                          - required: [genericMapRef]
                        properties:
                          optional:
                            type: boolean
                          configMapRef:
                            type: object
                            required: [name]
                            properties:
                              name:
                                type: string
                              namespace:
                                type: string
                          secretMapRef:
                            type: object
                            required: [name]
                            properties:
                              name:
                                type: string
                              namespace:
                                type: string
                          genericMapRef:
                            type: object
                            required: [apiVersion, kind, name]
                            properties:
                              apiVersion:
                                type: string
                              kind:
                                type: string
                              name:
                                type: string
                              namespace:
                                type: string
                    env:
                      type: array
                      items:
                        type: object
                        allOf:
                          - required: [name]
                          - # all array items should be oneOf ['value', 'valueFrom']
                            oneOf:
                              - required: [value]
                                # if 'value', neither 'optional' nor 'default' may be used
                                not:
                                  anyOf:
                                    - required: [default]
                                    - required: [optional]
                              - required: [valueFrom]
                                # if 'valueFrom', you must define oneOf:
                                oneOf:
                                  - # neither 'optional' nor 'default' is used
                                    not:
                                      anyOf:
                                        - required: [default]
                                        - required: [optional]
                                  - # 'optional' is used by itself
                                    required: [optional]
                                    not:
                                      required: [default]
                                  - # 'optional' and 'default' are used together IFF optional == true
                                    required: [optional, default]
                                    properties:
                                      optional:
                                        enum: [true]
                        properties:
                          optional:
                            type: boolean
                          default:
                            x-kubernetes-int-or-string: true
                          name:
                            type: string
                          value:
                            x-kubernetes-int-or-string: true
                          valueFrom:
                            type: object
                            oneOf:
                              - required: [configMapKeyRef]
                              - required: [secretKeyRef]
                              - required: [genericKeyRef]
                            properties:
                              configMapKeyRef:
                                type: object
                                required: [name, key]
                                properties:
                                  name:
                                    type: string
                                  key:
                                    type: string
                                  namespace:
                                    type: string
                                  type:
                                    type: string
                                    enum: [number, boolean, json]
                              secretKeyRef:
                                type: object
                                required: [name, key]
                                properties:
                                  name:
                                    type: string
                                  key:
                                    type: string
                                  namespace:
                                    type: string
                                  type:
                                    type: string
                                    enum: [number, boolean, json]
                              genericKeyRef:
                                type: object
                                required: [apiVersion, kind, name, key]
                                properties:
                                  apiVersion:
                                    type: string
                                  kind:
                                    type: string
                                  name:
                                    type: string
                                  key:
                                    type: string
                                  namespace:
                                    type: string
                                  type:
                                    type: string
                                    enum: [number, boolean, json]
